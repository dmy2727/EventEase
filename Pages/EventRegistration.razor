@page "/register/{eventId:int}"
@using Shared.Models
@using Shared.Services
@inject EventService EventService
@inject NavigationManager Navigation

<h3>Event Registration</h3>

@if (eventDetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div>
        <h4>Register for @eventDetails.Name</h4>
        <p>@eventDetails.Date.ToShortDateString() - @eventDetails.Location</p>
        <p>@eventDetails.Description</p>
        <EditForm Model="@registrationModel" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="name">Name</label>
                <InputText id="name" class="form-control" @bind-Value="registrationModel.Name" />
                <ValidationMessage For="@(() => registrationModel.Name)" />
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="registrationModel.Email" />
                <ValidationMessage For="@(() => registrationModel.Email)" />
            </div>

            <button type="submit" class="btn btn-primary" disabled="@isSubmitting">Register</button>
        </EditForm>

        @if (isSuccess)
        {
            <div class="alert alert-success mt-3">
                Registration successful!
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public int eventId { get; set; }

    private Event? eventDetails;
    private RegistrationModel registrationModel = new RegistrationModel();
    private bool isSubmitting = false;
    private bool isSuccess = false;

    protected override async Task OnInitializedAsync()
    {
        eventDetails = await EventService.GetEventByIdAsync(eventId);
    }

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        // Simulate registration process
        await Task.Delay(1000);
        isSuccess = true;
        isSubmitting = false;
    }
}